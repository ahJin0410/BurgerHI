<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 로그인 -->
	<entry key="selectByIdAndPwd">
		SELECT
		       A.USER_NO
		     , A.USER_NAME
		     , A.USER_ID
		     , A.GRADE_NO
		     , A.USER_POINT
		     , A.PHONE
		     , A.USER_YN
		  FROM USER_TABLE A
		 WHERE A.USER_ID = ?
		   AND A.USER_PWD = ?
		   AND A.USER_YN = 'Y'
	</entry>
	
	<!-- 아이디 중복 체크 -->
	<entry key="selectByMemberId">
		SELECT
               COUNT(*)
          FROM USER_TABLE
         WHERE USER_ID = ?
	</entry>
   
	<!-- 회원가입 -->
	<entry key="registMember">
	    INSERT
          INTO USER_TABLE
        (
          USER_NO
        , USER_NAME
        , USER_ID
        , USER_PWD
        , GRADE_NO
        , PHONE
        )
        VALUES
        (
          SEQ_USER_NO.NEXTVAL
        , ?
        , ?
        , ?
        , ?
        , ?
        )
	</entry>
	
	<!-- 회원 정보 확인 -->
	<entry key="selectMemberInfo">
		SELECT
		       A.USER_NO
		     , A.USER_NAME
		     , A.USER_ID
		     , A.GRADE_NO
		     , A.USER_POINT
		     , A.PHONE
		     , A.USER_YN
		  FROM USER_TABLE A
		 WHERE A.USER_NO = ?
	</entry>
	
	<!-- 회원 정보 수정 -->
	<entry key="updateUserInfo">
	    UPDATE
	           USER_TABLE A
	       SET A.USER_PWD = ?
	         , A.PHONE = ?
	     WHERE A.USER_NO = ?
	</entry>
	
	<!-- 회원 탈퇴 -->
	<entry key="deleteMemberInfo">
	    UPDATE
	           USER_TABLE A
	       SET A.USER_YN = 'N'
	     WHERE A.USER_NO = ?
	</entry>
	
	<!-- 전체 카테고리 조회 -->
	<entry key="selectAllCategory">
		SELECT A.CATEGORY_CODE
		     , A.CATEGORY_NAME
		     , A.REF_CATEGORY_CODE
		     , NVL(B.CATEGORY_NAME, '미지정')
		  FROM CATEGORY_TABLE A
		  LEFT JOIN CATEGORY_TABLE B ON(A.REF_CATEGORY_CODE = B.CATEGORY_CODE)
		 ORDER BY 1
	</entry>
	
	<!-- 사용자가 선택한 카테고리의 전체 메뉴 조회 -->
	<entry key="selectMenuByCategory">
		SELECT
		       A.MENU_CODE
		     , A.MENU_NAME
		     , A.PRICE
		     , A.MENU_EXPLAIN
		     , A.CATEGORY_CODE
		     , A.ORDERABLE
		  FROM MENU_TABLE A
		 WHERE A.CATEGORY_CODE = ?
	</entry>
	
	<!-- 사용자가 선택한 메뉴 장바구니에 담기 -->
	<entry key="registOrderMenu">
		INSERT
		  INTO ORDER_MENU_TABLE
		(
		  ORDER_MENU_NO
		, USER_NO
		, MENU_CODE
		, ORDER_AMOUNT
		, ORDER_MENU_SET_YN
		)
		VALUES
		(
		  SEQ_ORDER_MENU_NO.NEXTVAL
		, ?
		, ?
		, ?
		, ?
		)
	</entry>
	
	<!-- 장바구니 확인 -->
	<entry key="selectOrderMenu">
		SELECT
		  	   A.ORDER_MENU_NO
		  	 , A.MENU_CODE
    		 , B.MENU_NAME
    		 , A.ORDER_AMOUNT
    		 , B.PRICE
    		 , A.ORDER_MENU_SET_YN
  		  FROM ORDER_MENU_TABLE A
          JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
         WHERE A.USER_NO = ?
         ORDER BY A.ORDER_MENU_NO
	</entry>
	
	<!-- 장바구니 수정 -->
	<entry key="deleteOrderMenu">
 		DELETE
 		  FROM ORDER_MENU_TABLE A
 		 WHERE A.ORDER_MENU_NO = ?
	</entry>
	
	<!-- 회원 등급별 할인 조회 -->
	<entry key="selectGradeByGradeNo">
	    SELECT
  	           A.DISCOUNT
 	      FROM GRADE_TABLE A
  	     WHERE A.GRADE_NO = ?
	</entry>
	
	<!-- 카드 목록 조회 -->
	<entry key="selectAllCard">
	    SELECT
	    	   A.CARD_CODE
	    	 , A.CARD_BANK
	    	 , A.CARD_DISCOUNT
	    	 , A.CARDABLE
	      FROM CARD_TABLE A
	     ORDER BY A.CARD_DISCOUNT DESC
	</entry>
	
	<!-- 결제가 완료된 정보를 주문 테이블에 삽입 -->
	<entry key="registOrder">
        INSERT
          INTO ORDER_TABLE A
        (
          A.ORDER_CODE
        , A.ORDER_DATE
        , A.PAYMENT_PRICE
        )
        VALUES
        (
          SEQ_ORDER_CODE.NEXTVAL
        , SYSDATE
        , ?
        )
	</entry>
	
	<!-- 결제가 완료된 정보를 결제 테이블에 삽입 -->
	<entry key="registPayment">
        INSERT
          INTO PAYMENT_TABLE A
        (
          A.PAYMENT_NO
        , A.ORDER_CODE
        , A.USER_NO
        , A.TOTAL_PRICE
        , A.GRADE_NO
        , A.CARD_CODE
        , A.PAYMENT_PRICE
        , A.PAYMENT_BY
        )
        VALUES
        (
         SEQ_PAYMENT_NO.NEXTVAL
        , (SELECT MAX(A.ORDER_CODE)
             FROM ORDER_TABLE A
          )
        , ?
        , ?
        , ?
        , ?
        , ?
        , ?
        )
	</entry>
	
	<!-- 결제가 완료된 정보를 판매이력 테이블에 삽입 -->
	<entry key="registSalesAmount">
	    INSERT
		     INTO SALES_AMOUNT_TABLE
	    (
		  SALES_AMOUNT_NO
	    , ORDER_CODE
	    , MENU_CODE
	    , MENU_AMOUNT
	    , MENU_PRICE
	    )
	    VALUES
	    (
	      SEQ_SALES_AMOUNT_NO.NEXTVAL
	    , SEQ_ORDER_CODE.CURRVAL
	    , ?
	    , ?
	    , ?
	    )
	</entry>
	
	<!-- 결제가 완료된 장바구니 메뉴 삭제 -->
	<entry key="deleteOrderMenu">
		DELETE
 		  FROM ORDER_MENU_TABLE A
 		 WHERE A.USER_NO = ?
	</entry>
	
	<!-- 결제가 완료된 포인트 금액 누적 -->
	<entry key="modifyMemberPoint">
		UPDATE
               USER_TABLE A
           SET A.USER_POINT = A.USER_POINT + ?
         WHERE USER_NO = ?
	</entry>
	
	<!-- 회원 누적 포인트 금액 조회 -->
	<entry key="selectUserPoint">
		SELECT
		       A.USER_POINT
		  FROM USER_TABLE A
		 WHERE A.USER_NO = ?
	</entry>
	
	<!-- 회원 등급 업그레이드 -->
	<entry key="modifyUserGrade">
		UPDATE
               USER_TABLE A
           SET A.GRADE_NO = ?
         WHERE USER_NO = ?
	</entry>
	
	<!-- 기프티콘 생성 -->
	<entry key="registGifticonEvent">
      INSERT
        INTO GIFTICON_TABLE 
		(
		  GIFTICON_NO
		, GIFTICON_PRICE
		)
		VALUES
		(
		  TO_CHAR(SYSDATE, 'YYmmDD')|| '-' || SEQ_GIFTICON_NO.NEXTVAL || '-0306'
		, ?
		)
   </entry>
	
	<!-- 생성한 기프티콘 조회 -->
	<entry key="selectlastgifticon">
		SELECT
			   GIFTICON_NO
			 , GIFTICON_PRICE
          FROM GIFTICON_TABLE
         WHERE GIFTICON_NO = (SELECT MAX(GIFTICON_NO)
                                FROM GIFTICON_TABLE
                             )
   </entry>
	
	<!-- 사용 할 기프티콘 금액 조회 -->
	<entry key ="selectGifticonBy">
	    SELECT
			   A.GIFTICON_PRICE
  	      FROM GIFTICON_TABLE A
 	     WHERE A.GIFTICON_NO = ?
	</entry>
	
	<!-- 사용한 기프티콘 금액 수정 -->
	<entry key="modifyGifticonPrice">
	    UPDATE GIFTICON_TABLE A
   	       SET A.GIFTICON_PRICE = ?
	     WHERE A.GIFTICON_NO = ?
	</entry>
	
	<!-- 비회원 정보 조회 -->
	<entry key="selectNonMemberInfo">
		SELECT
		       A.USER_NO
		     , A.GRADE_NO
		  FROM USER_TABLE A
		 WHERE A.USER_NO = (SELECT MAX(A.USER_NO)
                                FROM USER_TABLE A
                           )
	</entry>
	
	
	<!-- 관리자 메뉴 -->
	
	<!-- 카테고리 별 메뉴 랭킹 -->
	<entry key="selectMenuRankingBy">
	    SELECT 
	           A.MENU_CODE
	         , B.MENU_NAME
	         , SUM(A.MENU_AMOUNT)
	      FROM SALES_AMOUNT_TABLE A
	      JOIN MENU_TABLE B ON (A.MENU_CODE = B.MENU_CODE)
	     WHERE B.CATEGORY_CODE = ?
	     GROUP BY A.MENU_CODE, B.MENU_NAME
	     ORDER BY 3 DESC
	</entry>
	
	<!-- 카테고리 추가 -->
	<entry key="registCategory">
		INSERT
	      INTO CATEGORY_TABLE A
	    (
	      A.CATEGORY_CODE
	    , A.CATEGORY_NAME
	    , A.REF_CATEGORY_CODE
	    )
	    VALUES
	    (
	      SEQ_CATEGORY_CODE.NEXTVAL
	    , ?
	    , ?
	    )
	</entry>
	
	<!-- 카테고리 수정 -->
	<entry key="modifyCategory">
		UPDATE CATEGORY_TABLE A
		   SET A.CATEGORY_NAME = ?
		     , A.REF_CATEGORY_CODE = ?
		 WHERE A.CATEGORY_CODE = ?
	</entry>
	
	<!-- 카테고리 삭제 -->
	<entry key="deleteCategory">
	    DELETE 
	      FROM CATEGORY_TABLE A
	     WHERE A.CATEGORY_CODE = ?
	</entry>
	
	<!-- 전체 메뉴 조회 -->
	<entry key="selectAllMenu">
		SELECT 
			   MENU_CODE
			 , MENU_NAME
			 , PRICE
			 , MENU_EXPLAIN
			 , CATEGORY_CODE
			 , ORDERABLE
		  FROM MENU_TABLE
	</entry>
	
	<!-- 메뉴 추가 -->
	<entry key="registtMenu">
		INSERT
          INTO MENU_TABLE
        ( 
          MENU_CODE
        , MENU_NAME
        , PRICE
        , MENU_EXPLAIN
        , CATEGORY_CODE
        , ORDERABLE
        )
        VALUES
        (
          SEQ_MENU_CODE.NEXTVAL
        , ?                      
        , ?                      
        , ?                      
        , ?                      
        , ?                      
        )
	</entry>
	
	<!-- 메뉴 수정 -->
	<entry key="updateMenu">
	   	UPDATE
          	   MENU_TABLE
           SET MENU_NAME = ?
             , PRICE = ?
             , MENU_EXPLAIN = ?
             , CATEGORY_CODE = ?
             , ORDERABLE = ?
         WHERE MENU_CODE = ?
	</entry>
	
	<!-- 메뉴 삭제 -->
	<entry key="deleteMenu">
	   	DELETE
          FROM MENU_TABLE
         WHERE MENU_CODE = ?
	</entry>
	
	<!-- 월별 매출 조회 -->
	<entry key="selectMonthSales">
		SELECT SUM(PAYMENT_PRICE)
		  FROM ORDER_TABLE
		 WHERE ORDER_DATE LIKE '2022/' || ? || '%'
	</entry>
	
	<!-- 일별 매출 조회 -->
	<entry key="selectDateSales">
		SELECT 
			   ORDER_DATE
		     , SUM(PAYMENT_PRICE)
		  FROM ORDER_TABLE
		 GROUP BY ORDER_DATE
		HAVING ORDER_DATE LIKE '2022/' || ? || '/' || ?
	</entry>
	
	<!-- 총 매출 조회 -->
	<entry key="selectAllSales">
		SELECT
               SUM(PAYMENT_PRICE)
          FROM PAYMENT_TABLE
	</entry>
	
	<!-- 등급별 매출 -->
	<entry key="selectGradeSales">
	   SELECT
   	          B.GRADE_NO
   	        , SUM(A.PAYMENT_PRICE)
 	     FROM PAYMENT_TABLE A
  	    RIGHT JOIN GRADE_TABLE B ON (A.GRADE_NO = B.GRADE_NO)
  	    GROUP BY B.GRADE_NO
        ORDER BY 1
	</entry>
	
	<!-- 결제 종류 별 매출	 -->
	<entry key="selectMethodSales">
	    SELECT 
	    	   PAYMENT_BY
	    	 , SUM(PAYMENT_PRICE)
	      FROM PAYMENT_TABLE
	     GROUP BY PAYMENT_BY
	     ORDER BY PAYMENT_BY
	</entry>
	
	<!-- 전체 회원 목록 조회 -->
	<entry key="selectAllUser">
	    SELECT
	           A.USER_NO
	         , A.USER_NAME
	         , A.USER_ID
	         , B.GRADE_NAME
	         , A.USER_POINT
	         , A.PHONE
	         , A.USER_YN
	      FROM USER_TABLE A
	      JOIN GRADE_TABLE B ON (A.GRADE_NO = B.GRADE_NO)
	     WHERE A.USER_NAME IS NOT NULL
	     ORDER BY A.USER_NO
	</entry>
	
	<!-- 회원 등급 변경 -->
	<entry key="modifyUserGrade">
        UPDATE USER_TABLE A
           SET A.GRADE_NO = ?
         WHERE USER_NO = ?
	</entry>
	
</properties>
